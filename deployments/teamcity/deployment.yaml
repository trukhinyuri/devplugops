apiVersion: v1
kind: Namespace
metadata:
  name: default
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: teamcity-data
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: teamcity-logs
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: teamcity-server
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: teamcity-server
  template:
    metadata:
      labels:
        app: teamcity-server
    spec:
      containers:
      - name: teamcity-server
        image: jetbrains/teamcity-server:latest
        ports:
        - containerPort: 8111
          name: web
        resources:
          limits:
            cpu: "2"
            memory: "2Gi"
          requests:
            cpu: "1"
            memory: "1Gi"
        volumeMounts:
        - name: teamcity-data
          mountPath: /data/teamcity_server/datadir
        - name: teamcity-logs
          mountPath: /opt/teamcity/logs
      volumes:
      - name: teamcity-data
        persistentVolumeClaim:
          claimName: teamcity-data
      - name: teamcity-logs
        persistentVolumeClaim:
          claimName: teamcity-logs
---
apiVersion: v1
kind: Service
metadata:
  name: teamcity-server
  namespace: default
spec:
  type: NodePort
  ports:
  - port: 8111
    targetPort: 8111
    nodePort: 30111
    name: web
  selector:
    app: teamcity-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: teamcity-agent
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: teamcity-agent
  template:
    metadata:
      labels:
        app: teamcity-agent
    spec:
      containers:
      - name: teamcity-agent
        image: jetbrains/teamcity-agent:latest
        env:
        - name: SERVER_URL
          value: "http://teamcity-server:8111"
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "500Mi"
        volumeMounts:
        - name: docker-socket
          mountPath: /var/run/docker.sock
      volumes:
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
          type: Socket