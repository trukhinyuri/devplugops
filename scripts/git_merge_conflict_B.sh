#!/usr/bin/env bash
# Source the colors utility
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source "$SCRIPT_DIR/colors.sh"
# Source the colors utility
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source "$SCRIPT_DIR/colors.sh"

print_yellow "Attempting to merge feature/payment-gateway into develop..."
print_yellow ""
print_yellow "From gitlab.com:acme/payment-service"
print_yellow " * branch            develop    -> FETCH_HEAD"
print_yellow "Auto-merging src/config/settings.json"
print_error "CONFLICT (content): Merge conflict in src/config/settings.json"
print_yellow "Auto-merging src/services/payment.go"
print_error "CONFLICT (content): Merge conflict in src/services/payment.go"
print_yellow "Auto-merging README.md"
print_yellow "Automatic merge failed; fix conflicts and then commit the result."
print_yellow ""
print_yellow "Conflicting files:"
print_detail "  src/config/settings.json"
print_detail "  src/services/payment.go"
print_yellow ""
print_yellow "Conflict in src/services/payment.go:"
print_detail "<<<<<<< HEAD"
print_detail "func ProcessPayment(ctx context.Context, amount float64, currency string) (*Transaction, error) {"
print_detail "    logger.Info(\"Processing payment\", \"amount\", amount, \"currency\", currency)"
print_detail "    client := NewPaymentClient(config.APIKey, config.APISecret)"
print_detail "    return client.CreateTransaction(ctx, amount, currency, config.MerchantID)"
print_detail "======="
print_detail "func ProcessPayment(ctx context.Context, amount float64, currency string) (*Transaction, error) {"
print_detail "    logger.Info(\"Processing payment with retry\", \"amount\", amount, \"currency\", currency)"
print_detail "    client := NewPaymentClient(config.APIKey, config.APISecret)"
print_detail "    return retry.Do(func() (*Transaction, error) {"
print_detail "        return client.CreateTransaction(ctx, amount, currency, config.MerchantID)"
print_detail "    }, retry.Attempts(3), retry.Delay(time.Second))"
print_detail ">>>>>>> feature/payment-gateway"
print_yellow ""
print_error "Error: Failed to push to protected branch 'develop'. Merge conflicts must be resolved first."
print_yellow "Remote: error: GL-Protected: You are not allowed to push code to protected branches on this project."
print_yellow "Remote: error: Required pipeline \"ci-pipeline\" must succeed before merging."
print_yellow " ! [remote rejected] HEAD -> develop (protected branch hook declined)"
print_yellow "error: failed to push some refs to 'git@gitlab.com:acme/payment-service.git'"
