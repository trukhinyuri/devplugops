#!/usr/bin/env bash
# Source the colors utility
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source "$SCRIPT_DIR/colors.sh"
# Source the colors utility
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source "$SCRIPT_DIR/colors.sh"

print_yellow "AWS CLI Version: aws-cli/2.9.15 Python/3.10.8 Darwin/22.3.0 source/arm64 prompt/off"
print_yellow "Region: eu-west-1"
print_yellow "Operation: CreateTable"
print_yellow "Service: DynamoDB"
print_yellow "Timestamp: 2023-11-05T08:17:32Z"
print_yellow "Request ID: 7f8e9d6c-5a4b-3c2d-1e0f-EXAMPLE22222"
print_yellow ""
print_error "An error occurred (ThrottlingException) when calling the CreateTable operation: Rate exceeded"
print_error "Rate Exceeded: please retry after 2.5 seconds"
print_yellow ""
print_yellow "API Call Details:"
print_detail "{"
print_detail "  \"Error\": {"
echo -e "\e[90m    \"Code\": \"ThrottlingException\",\e[0m"
echo -e "\e[90m    \"Message\": \"Rate exceeded\",\e[0m"
echo -e "\e[90m    \"Type\": \"Sender\",\e[0m"
echo -e "\e[90m    \"RequestId\": \"7f8e9d6c-5a4b-3c2d-1e0f-EXAMPLE22222\"\e[0m"
print_detail "  },"
print_detail "  \"ResponseMetadata\": {"
echo -e "\e[90m    \"RequestId\": \"7f8e9d6c-5a4b-3c2d-1e0f-EXAMPLE22222\",\e[0m"
print_detail "    \"HTTPStatusCode\": 400,"
print_detail "    \"HTTPHeaders\": {"
echo -e "\e[90m      \"x-amzn-requestid\": \"7f8e9d6c-5a4b-3c2d-1e0f-EXAMPLE22222\",\e[0m"
echo -e "\e[90m      \"content-type\": \"application/x-amz-json-1.0\",\e[0m"
echo -e "\e[90m      \"content-length\": \"295\",\e[0m"
echo -e "\e[90m      \"date\": \"Sun, 05 Nov 2023 08:17:32 GMT\"\e[0m"
print_detail "    },"
print_detail "    \"RetryAttempts\": 2"
print_detail "  }"
print_detail "}"
print_yellow ""
print_yellow "Service Quotas:"
print_detail "- DynamoDB Control Plane API: 50 requests per second"
print_detail "- Current usage: ~65 requests per second"
print_yellow ""
print_yellow "Recommended actions:"
print_yellow "1. Implement exponential backoff with jitter in your API calls"
print_yellow "2. Batch operations when possible"
print_yellow "3. Request a service quota increase via AWS Support"
print_yellow "4. Use AWS CloudFormation for infrastructure provisioning"
print_yellow "5. Distribute control plane operations across multiple regions"